{"version":3,"names":["jwt","require","User","validationResult","generateToken","id","sign","process","env","JWT_SECRET","expiresIn","register","req","res","next","console","log","body","errors","isEmpty","array","status","json","map","e","msg","name","email","password","userExists","findOne","error","user","create","_id","role","token","messages","Object","values","val","message","login","isMatch","comparePassword","getMe","findById","select","logout","session","destroy","err","clearCookie","module","exports"],"sources":["auth.controller.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('../models/user.model');\nconst { validationResult } = require('express-validator');\n\n// Generate JWT Token\nconst generateToken = (id) => {\n  return jwt.sign({ id }, process.env.JWT_SECRET, {\n    expiresIn: '30d',\n  });\n};\n\n// @desc    Register user\n// @route   POST /api/auth/register\n// @access  Public\nconst register = async (req, res, next) => {\n  console.log('DEBUG: Entered register controller, body:', req.body);\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    console.log('DEBUG: express-validator errors:', errors.array());\n    return res.status(400).json({ errors: errors.array().map((e) => e.msg) });\n  }\n  try {\n    const { name, email, password } = req.body;\n\n    // Check if user exists\n    const userExists = await User.findOne({ email });\n    if (userExists) {\n      return res.status(400).json({ error: 'User already exists' });\n    }\n\n    // Create user\n    const user = await User.create({\n      name,\n      email,\n      password,\n    });\n\n    if (user) {\n      res.status(201).json({\n        _id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        token: generateToken(user._id),\n      });\n    }\n  } catch (error) {\n    // Handle Mongoose validation errors in a consistent format\n    if (error.name === 'ValidationError') {\n      const messages = Object.values(error.errors).map((val) => val.message);\n      return res.status(400).json({ errors: messages });\n    }\n    next(error);\n  }\n};\n\n// @desc    Login user\n// @route   POST /api/auth/login\n// @access  Public\nconst login = async (req, res, next) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array().map((e) => e.msg) });\n  }\n  try {\n    const { email, password } = req.body;\n\n    // Check for user email\n    const user = await User.findOne({ email });\n    if (!user) {\n      return res.status(401).json({ error: 'Invalid credentials' });\n    }\n\n    // Check password\n    const isMatch = await user.comparePassword(password);\n    if (!isMatch) {\n      return res.status(401).json({ error: 'Invalid credentials' });\n    }\n\n    res.json({\n      _id: user._id,\n      name: user.name,\n      email: user.email,\n      role: user.role,\n      token: generateToken(user._id),\n    });\n  } catch (error) {\n    next(error);\n  }\n};\n\n// @desc    Get current user\n// @route   GET /api/auth/me\n// @access  Private\nconst getMe = async (req, res, next) => {\n  try {\n    const user = await User.findById(req.user._id).select('-password');\n    res.json(user);\n  } catch (error) {\n    next(error);\n  }\n};\n\n// @desc    Logout user\n// @route   POST /api/auth/logout\n// @access  Public\nconst logout = (req, res) => {\n  if (req.session) {\n    req.session.destroy((err) => {\n      if (err) {\n        return res.status(500).json({ error: 'Logout failed' });\n      }\n      res.clearCookie('connect.sid'); // Default cookie name for express-session\n      return res.json({ message: 'Logged out successfully' });\n    });\n  } else {\n    // For JWT, instruct client to remove token\n    return res.json({ message: 'Logged out (client should remove token)' });\n  }\n};\n\n// IMPORTANT: Handles user registration, login, and authentication logic\n// TODO: Add rate limiting to login endpoint for extra security\n\nmodule.exports = {\n  register,\n  login,\n  getMe,\n  logout,\n};\n"],"mappings":"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","ignoreList":[]}