{"version":3,"names":["body","param","query","require","validateApartment","trim","notEmpty","withMessage","isLength","min","max","isFloat","isArray","isInt","optional","isIn","isBoolean","isURL","validateApartmentQuery","validateObjectId","isMongoId","module","exports"],"sources":["validation.middleware.js"],"sourcesContent":["const { body, param, query } = require('express-validator');\r\n\r\n// Validation middleware for apartment creation/updates\r\nconst validateApartment = [\r\n  body('title')\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage('Title is required')\r\n    .isLength({ min: 3, max: 100 })\r\n    .withMessage('Title must be between 3 and 100 characters'),\r\n  \r\n  body('description')\r\n    .trim()\r\n    .notEmpty()\r\n    .withMessage('Description is required')\r\n    .isLength({ min: 10, max: 2000 })\r\n    .withMessage('Description must be between 10 and 2000 characters'),\r\n  \r\n  body('price')\r\n    .isFloat({ min: 0 })\r\n    .withMessage('Price must be a positive number'),\r\n  \r\n  body('location.coordinates')\r\n    .isArray({ min: 2, max: 2 })\r\n    .withMessage('Location coordinates must be an array of [longitude, latitude]'),\r\n  \r\n  body('location.coordinates.*')\r\n    .isFloat()\r\n    .withMessage('Coordinates must be valid numbers'),\r\n  \r\n  body('bedrooms')\r\n    .isInt({ min: 0 })\r\n    .withMessage('Bedrooms must be a non-negative integer'),\r\n  \r\n  body('bathrooms')\r\n    .isFloat({ min: 0 })\r\n    .withMessage('Bathrooms must be a non-negative number'),\r\n  \r\n  body('area')\r\n    .isFloat({ min: 0 })\r\n    .withMessage('Area must be a positive number'),\r\n  \r\n  body('amenities')\r\n    .optional()\r\n    .isArray()\r\n    .withMessage('Amenities must be an array'),\r\n  \r\n  body('images')\r\n    .optional()\r\n    .isArray()\r\n    .withMessage('Images must be an array'),\r\n  \r\n  body('status')\r\n    .optional()\r\n    .isIn(['available', 'rented', 'pending'])\r\n    .withMessage('Invalid status value'),\r\n  \r\n  body('isPublic')\r\n    .optional()\r\n    .isBoolean()\r\n    .withMessage('isPublic must be a boolean'),\r\n  \r\n  body('externalUrl')\r\n    .optional()\r\n    .isURL()\r\n    .withMessage('Invalid external URL format')\r\n];\r\n\r\n// Validation middleware for query parameters\r\nconst validateApartmentQuery = [\r\n  query('page')\r\n    .optional()\r\n    .isInt({ min: 1 })\r\n    .withMessage('Page must be a positive integer'),\r\n  \r\n  query('limit')\r\n    .optional()\r\n    .isInt({ min: 1, max: 100 })\r\n    .withMessage('Limit must be between 1 and 100'),\r\n  \r\n  query('minPrice')\r\n    .optional()\r\n    .isFloat({ min: 0 })\r\n    .withMessage('Minimum price must be a positive number'),\r\n  \r\n  query('maxPrice')\r\n    .optional()\r\n    .isFloat({ min: 0 })\r\n    .withMessage('Maximum price must be a positive number'),\r\n  \r\n  query('bedrooms')\r\n    .optional()\r\n    .isInt({ min: 0 })\r\n    .withMessage('Bedrooms must be a non-negative integer'),\r\n  \r\n  query('status')\r\n    .optional()\r\n    .isIn(['available', 'rented', 'pending'])\r\n    .withMessage('Invalid status value'),\r\n  \r\n  query('lat')\r\n    .optional()\r\n    .isFloat()\r\n    .withMessage('Latitude must be a valid number'),\r\n  \r\n  query('lng')\r\n    .optional()\r\n    .isFloat()\r\n    .withMessage('Longitude must be a valid number'),\r\n  \r\n  query('radius')\r\n    .optional()\r\n    .isFloat({ min: 0 })\r\n    .withMessage('Radius must be a positive number')\r\n];\r\n\r\n// Validation middleware for MongoDB ObjectId parameters\r\nconst validateObjectId = [\r\n  param('id')\r\n    .isMongoId()\r\n    .withMessage('Invalid ID format')\r\n];\r\n\r\nmodule.exports = {\r\n  validateApartment,\r\n  validateApartmentQuery,\r\n  validateObjectId\r\n}; "],"mappings":"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","ignoreList":[]}