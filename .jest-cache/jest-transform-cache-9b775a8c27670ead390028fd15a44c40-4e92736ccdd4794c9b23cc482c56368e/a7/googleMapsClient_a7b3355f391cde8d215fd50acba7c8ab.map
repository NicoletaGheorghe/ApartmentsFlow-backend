{"version":3,"names":["axios","require","GoogleMapsClient","constructor","apiKey","baseUrl","getCommuteTime","origin","destination","mode","response","get","params","key","data","status","Error","route","routes","leg","legs","duration","text","distance","overview_polyline","points","error","console","getGeocode","address","result","results","formattedAddress","formatted_address","location","geometry","placeId","place_id","getPlaceDetails","fields","module","exports"],"sources":["googleMapsClient.js"],"sourcesContent":["const axios = require('axios');\n\n// Utility for interacting with the Google Maps API (directions, geocode, place details)\n// IMPORTANT: Used by commute controller for all Google Maps requests\n\nclass GoogleMapsClient {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseUrl = 'https://maps.googleapis.com/maps/api';\n  }\n\n  async getCommuteTime(origin, destination, mode = 'driving') {\n    try {\n      const response = await axios.get(`${this.baseUrl}/directions/json`, {\n        params: {\n          origin,\n          destination,\n          mode,\n          key: this.apiKey,\n        },\n      });\n\n      if (response.data.status !== 'OK') {\n        throw new Error(`Google Maps API error: ${response.data.status}`);\n      }\n\n      const route = response.data.routes[0];\n      const leg = route.legs[0];\n\n      return {\n        duration: leg.duration.text,\n        distance: leg.distance.text,\n        mode,\n        route: route.overview_polyline.points,\n      };\n    } catch (error) {\n      console.error('Error getting commute time:', error);\n      throw error;\n    }\n  }\n\n  async getGeocode(address) {\n    try {\n      const response = await axios.get(`${this.baseUrl}/geocode/json`, {\n        params: {\n          address,\n          key: this.apiKey,\n        },\n      });\n\n      if (response.data.status !== 'OK') {\n        throw new Error(`Google Maps API error: ${response.data.status}`);\n      }\n\n      const result = response.data.results[0];\n      return {\n        formattedAddress: result.formatted_address,\n        location: result.geometry.location,\n        placeId: result.place_id,\n      };\n    } catch (error) {\n      console.error('Error geocoding address:', error);\n      throw error;\n    }\n  }\n\n  async getPlaceDetails(placeId) {\n    try {\n      const response = await axios.get(`${this.baseUrl}/place/details/json`, {\n        params: {\n          place_id: placeId,\n          fields: 'name,formatted_address,geometry,rating,types',\n          key: this.apiKey,\n        },\n      });\n\n      if (response.data.status !== 'OK') {\n        throw new Error(`Google Maps API error: ${response.data.status}`);\n      }\n\n      return response.data.result;\n    } catch (error) {\n      console.error('Error getting place details:', error);\n      throw error;\n    }\n  }\n}\n\nmodule.exports = GoogleMapsClient;\n"],"mappings":"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","ignoreList":[]}