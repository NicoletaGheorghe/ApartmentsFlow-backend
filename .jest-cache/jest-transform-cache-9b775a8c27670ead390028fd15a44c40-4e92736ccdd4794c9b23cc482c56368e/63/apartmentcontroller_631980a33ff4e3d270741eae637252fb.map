{"version":3,"names":["Apartment","require","NodeCache","cache","stdTTL","buildApartmentQuery","req","user","role","$or","isPublic","owner","_id","getApartments","res","query","page","parseInt","limit","skip","apartments","find","select","populate","sort","createdAt","total","countDocuments","pages","Math","ceil","json","error","console","status","message","getApartment","next","apartment","findById","params","id","toString","createApartment","create","body","populatedApartment","updateApartment","undefined","updatedApartment","findByIdAndUpdate","$set","new","runValidators","name","details","deleteApartment","deleteOne","module","exports"],"sources":["apartment.controller.js"],"sourcesContent":["const Apartment = require('../models/apartment.model');\nconst NodeCache = require('node-cache');\n\n// Initialize cache with a standard TTL of 10 minutes\nconst cache = new NodeCache({ stdTTL: 600 });\n\n// Query builder for apartment filters\nconst buildApartmentQuery = (req) => {\n  // Handle user role-based access\n  if (req.user) {\n    if (req.user.role === 'admin') {\n      // Admin sees all listings\n      return {};\n    } else if (req.user.role === 'agent') {\n      // Agent sees public listings and their own private listings\n      return {\n        $or: [{ isPublic: true }, { owner: req.user._id }],\n      };\n    } else {\n      // Regular users see only public listings\n      return { isPublic: true };\n    }\n  } else {\n    // Unauthenticated users see only public listings\n    return { isPublic: true };\n  }\n};\n\n// @desc    Get all apartments\n// @route   GET /api/apartments\n// @access  Public\nconst getApartments = async (req, res) => {\n  try {\n    const query = buildApartmentQuery(req);\n\n    // Execute query with pagination\n    const page = parseInt(req.query.page, 10) || 1;\n    const limit = parseInt(req.query.limit, 10) || 10;\n    const skip = (page - 1) * limit;\n\n    const apartments = await Apartment.find(query)\n      .select(\n        'title price location bedrooms bathrooms area amenities images owner status isPublic createdAt'\n      )\n      .populate('owner', 'name email')\n      .skip(skip)\n      .limit(limit)\n      .sort({ createdAt: -1 });\n\n    const total = await Apartment.countDocuments(query);\n    const pages = Math.ceil(total / limit);\n\n    return res.json({\n      apartments,\n      page,\n      pages,\n      total,\n    });\n  } catch (error) {\n    console.error('Error in getApartments:', error);\n    return res.status(500).json({ message: 'Error fetching apartments', error: error.message });\n  }\n};\n\n// @desc    Get single apartment\n// @route   GET /api/apartments/:id\n// @access  Public\nconst getApartment = async (req, res, next) => {\n  try {\n    const apartment = await Apartment.findById(req.params.id).populate('owner', 'name email');\n\n    if (!apartment) {\n      return res.status(404).json({ error: 'Apartment not found' });\n    }\n\n    // Check if the apartment is public or if the user has access\n    if (\n      !apartment.isPublic &&\n      (!req.user ||\n        (apartment.owner._id.toString() !== req.user._id.toString() &&\n          req.user.role !== 'admin' &&\n          req.user.role !== 'agent'))\n    ) {\n      return res.status(403).json({ error: 'Not authorized to view this apartment' });\n    }\n\n    return res.json(apartment);\n  } catch (error) {\n    return next(error);\n  }\n};\n\n// @desc    Create apartment\n// @route   POST /api/apartments\n// @access  Private\nconst createApartment = async (req, res, next) => {\n  try {\n    // Only admin and agent can create listings\n    if (req.user.role !== 'admin' && req.user.role !== 'agent') {\n      return res.status(403).json({ error: 'Only admins and agents can create listings' });\n    }\n\n    const apartment = await Apartment.create({\n      ...req.body,\n      owner: req.user._id,\n    });\n\n    const populatedApartment = await Apartment.findById(apartment._id).populate(\n      'owner',\n      'name email'\n    );\n    return res.status(201).json(populatedApartment);\n  } catch (error) {\n    return next(error);\n  }\n};\n\n// @desc    Update apartment\n// @route   PUT /api/apartments/:id\n// @access  Private\nconst updateApartment = async (req, res) => {\n  try {\n    // IMPORTANT: Find the apartment to ensure it exists and check permissions before updating\n    const apartment = await Apartment.findById(req.params.id);\n\n    if (!apartment) {\n      return res.status(404).json({ error: 'Apartment not found' });\n    }\n\n    // IMPORTANT: Only the owner or an admin can update\n    if (apartment.owner.toString() !== req.user._id.toString() && req.user.role !== 'admin') {\n      return res.status(403).json({ error: 'Not authorized to update this apartment' });\n    }\n\n    // IMPORTANT: Only admins can change isPublic status\n    if (req.body.isPublic !== undefined && req.user.role !== 'admin') {\n      return res\n        .status(403)\n        .json({ error: 'Only admins can change the public status of listings' });\n    }\n\n    // TODO: Add more granular field-level update permissions if needed in the future\n\n    // Update apartment\n    const updatedApartment = await Apartment.findByIdAndUpdate(\n      req.params.id,\n      { $set: req.body },\n      { new: true, runValidators: true }\n    ).populate('owner', 'name email');\n\n    if (!updatedApartment) {\n      return res.status(404).json({ error: 'Apartment not found' });\n    }\n\n    return res.json(updatedApartment);\n  } catch (error) {\n    // Handle validation errors\n    if (error.name === 'ValidationError') {\n      return res.status(400).json({ error: 'Validation error', details: error.message });\n    }\n    // Handle other errors\n    console.error('Error in updateApartment:', error);\n    return res.status(500).json({ error: 'Error updating apartment', details: error.message });\n  }\n};\n\n// @desc    Delete apartment\n// @route   DELETE /api/apartments/:id\n// @access  Private\nconst deleteApartment = async (req, res, next) => {\n  try {\n    const apartment = await Apartment.findById(req.params.id);\n\n    if (!apartment) {\n      return res.status(404).json({ error: 'Apartment not found' });\n    }\n\n    // Check ownership and role\n    if (apartment.owner.toString() !== req.user._id.toString() && req.user.role !== 'admin') {\n      return res.status(403).json({ error: 'Not authorized to delete this apartment' });\n    }\n\n    await apartment.deleteOne();\n\n    return res.json({ message: 'Apartment removed' });\n  } catch (error) {\n    return next(error);\n  }\n};\n\nmodule.exports = {\n  getApartments,\n  getApartment,\n  createApartment,\n  updateApartment,\n  deleteApartment,\n};\n"],"mappings":"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","ignoreList":[]}