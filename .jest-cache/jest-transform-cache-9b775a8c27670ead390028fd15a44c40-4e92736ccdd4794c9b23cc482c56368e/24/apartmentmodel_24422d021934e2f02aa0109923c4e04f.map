{"version":3,"names":["mongoose","require","apartmentSchema","Schema","title","type","String","required","trim","description","price","Number","min","location","enum","default","coordinates","address","street","city","state","zipCode","country","bedrooms","bathrooms","area","amenities","images","owner","Types","ObjectId","ref","status","timestamps","index","Apartment","model","module","exports"],"sources":["apartment.model.js"],"sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst apartmentSchema = new mongoose.Schema(\r\n  {\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n      trim: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    price: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n    },\r\n    location: {\r\n      type: {\r\n        type: String,\r\n        enum: ['Point'],\r\n        default: 'Point',\r\n      },\r\n      coordinates: {\r\n        type: [Number],\r\n        required: true,\r\n      },\r\n      address: {\r\n        street: String,\r\n        city: String,\r\n        state: String,\r\n        zipCode: String,\r\n        country: String,\r\n      },\r\n    },\r\n    bedrooms: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n    },\r\n    bathrooms: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n    },\r\n    area: {\r\n      type: Number,\r\n      required: true,\r\n      min: 0,\r\n    },\r\n    amenities: [\r\n      {\r\n        type: String,\r\n      },\r\n    ],\r\n    images: [\r\n      {\r\n        type: String,\r\n      },\r\n    ],\r\n    owner: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: 'User',\r\n      required: true,\r\n    },\r\n    status: {\r\n      type: String,\r\n      enum: ['available', 'rented', 'pending'],\r\n      default: 'available',\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\n// Create geospatial index for location queries\r\napartmentSchema.index({ location: '2dsphere' });\r\n\r\nconst Apartment = mongoose.model('Apartment', apartmentSchema);\r\n\r\nmodule.exports = Apartment;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,eAAe,GAAG,IAAIF,QAAQ,CAACG,MAAM,CACzC;EACEC,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,WAAW,EAAE;IACXJ,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDG,KAAK,EAAE;IACLL,IAAI,EAAEM,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDC,QAAQ,EAAE;IACRR,IAAI,EAAE;MACJA,IAAI,EAAEC,MAAM;MACZQ,IAAI,EAAE,CAAC,OAAO,CAAC;MACfC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE;MACXX,IAAI,EAAE,CAACM,MAAM,CAAC;MACdJ,QAAQ,EAAE;IACZ,CAAC;IACDU,OAAO,EAAE;MACPC,MAAM,EAAEZ,MAAM;MACda,IAAI,EAAEb,MAAM;MACZc,KAAK,EAAEd,MAAM;MACbe,OAAO,EAAEf,MAAM;MACfgB,OAAO,EAAEhB;IACX;EACF,CAAC;EACDiB,QAAQ,EAAE;IACRlB,IAAI,EAAEM,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDY,SAAS,EAAE;IACTnB,IAAI,EAAEM,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDa,IAAI,EAAE;IACJpB,IAAI,EAAEM,MAAM;IACZJ,QAAQ,EAAE,IAAI;IACdK,GAAG,EAAE;EACP,CAAC;EACDc,SAAS,EAAE,CACT;IACErB,IAAI,EAAEC;EACR,CAAC,CACF;EACDqB,MAAM,EAAE,CACN;IACEtB,IAAI,EAAEC;EACR,CAAC,CACF;EACDsB,KAAK,EAAE;IACLvB,IAAI,EAAEL,QAAQ,CAACG,MAAM,CAAC0B,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE,MAAM;IACXxB,QAAQ,EAAE;EACZ,CAAC;EACDyB,MAAM,EAAE;IACN3B,IAAI,EAAEC,MAAM;IACZQ,IAAI,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC;IACxCC,OAAO,EAAE;EACX;AACF,CAAC,EACD;EACEkB,UAAU,EAAE;AACd,CACF,CAAC;;AAED;AACA/B,eAAe,CAACgC,KAAK,CAAC;EAAErB,QAAQ,EAAE;AAAW,CAAC,CAAC;AAE/C,MAAMsB,SAAS,GAAGnC,QAAQ,CAACoC,KAAK,CAAC,WAAW,EAAElC,eAAe,CAAC;AAE9DmC,MAAM,CAACC,OAAO,GAAGH,SAAS","ignoreList":[]}