{"version":3,"names":["Apartment","require","getApartments","req","res","next","query","minPrice","maxPrice","price","$gte","Number","$lte","bedrooms","status","lat","lng","location","$near","$geometry","type","coordinates","$maxDistance","radius","page","limit","skip","apartments","find","populate","sort","createdAt","total","countDocuments","json","pages","Math","ceil","error","getApartment","apartment","findById","params","id","createApartment","create","body","owner","user","_id","updateApartment","toString","role","findByIdAndUpdate","new","runValidators","deleteApartment","deleteOne","message","module","exports"],"sources":["apartment.controller.js"],"sourcesContent":["const Apartment = require('../models/apartment.model');\r\n\r\n// @desc    Get all apartments\r\n// @route   GET /api/apartments\r\n// @access  Public\r\nconst getApartments = async (req, res, next) => {\r\n  try {\r\n    // Build query\r\n    const query = {};\r\n\r\n    // Filter by price range\r\n    if (req.query.minPrice || req.query.maxPrice) {\r\n      query.price = {};\r\n      if (req.query.minPrice) query.price.$gte = Number(req.query.minPrice);\r\n      if (req.query.maxPrice) query.price.$lte = Number(req.query.maxPrice);\r\n    }\r\n\r\n    // Filter by bedrooms\r\n    if (req.query.bedrooms) {\r\n      query.bedrooms = Number(req.query.bedrooms);\r\n    }\r\n\r\n    // Filter by status\r\n    if (req.query.status) {\r\n      query.status = req.query.status;\r\n    }\r\n\r\n    // Search by location if coordinates provided\r\n    if (req.query.lat && req.query.lng) {\r\n      query.location = {\r\n        $near: {\r\n          $geometry: {\r\n            type: 'Point',\r\n            coordinates: [Number(req.query.lng), Number(req.query.lat)],\r\n          },\r\n          $maxDistance: req.query.radius ? Number(req.query.radius) * 1000 : 10000, // Default 10km\r\n        },\r\n      };\r\n    }\r\n\r\n    // Execute query with pagination\r\n    const page = Number(req.query.page) || 1;\r\n    const limit = Number(req.query.limit) || 10;\r\n    const skip = (page - 1) * limit;\r\n\r\n    const apartments = await Apartment.find(query)\r\n      .populate('owner', 'name email')\r\n      .skip(skip)\r\n      .limit(limit)\r\n      .sort({ createdAt: -1 });\r\n\r\n    const total = await Apartment.countDocuments(query);\r\n\r\n    res.json({\r\n      apartments,\r\n      page,\r\n      pages: Math.ceil(total / limit),\r\n      total,\r\n    });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\n// @desc    Get single apartment\r\n// @route   GET /api/apartments/:id\r\n// @access  Public\r\nconst getApartment = async (req, res, next) => {\r\n  try {\r\n    const apartment = await Apartment.findById(req.params.id).populate('owner', 'name email');\r\n\r\n    if (!apartment) {\r\n      return res.status(404).json({ error: 'Apartment not found' });\r\n    }\r\n\r\n    res.json(apartment);\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\n// @desc    Create apartment\r\n// @route   POST /api/apartments\r\n// @access  Private\r\nconst createApartment = async (req, res, next) => {\r\n  try {\r\n    const apartment = await Apartment.create({\r\n      ...req.body,\r\n      owner: req.user._id,\r\n    });\r\n\r\n    res.status(201).json(apartment);\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\n// @desc    Update apartment\r\n// @route   PUT /api/apartments/:id\r\n// @access  Private\r\nconst updateApartment = async (req, res, next) => {\r\n  try {\r\n    let apartment = await Apartment.findById(req.params.id);\r\n\r\n    if (!apartment) {\r\n      return res.status(404).json({ error: 'Apartment not found' });\r\n    }\r\n\r\n    // Check ownership\r\n    if (apartment.owner.toString() !== req.user._id.toString() && req.user.role !== 'admin') {\r\n      return res.status(403).json({ error: 'Not authorized to update this apartment' });\r\n    }\r\n\r\n    apartment = await Apartment.findByIdAndUpdate(req.params.id, req.body, {\r\n      new: true,\r\n      runValidators: true,\r\n    });\r\n\r\n    res.json(apartment);\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\n// @desc    Delete apartment\r\n// @route   DELETE /api/apartments/:id\r\n// @access  Private\r\nconst deleteApartment = async (req, res, next) => {\r\n  try {\r\n    const apartment = await Apartment.findById(req.params.id);\r\n\r\n    if (!apartment) {\r\n      return res.status(404).json({ error: 'Apartment not found' });\r\n    }\r\n\r\n    // Check ownership\r\n    if (apartment.owner.toString() !== req.user._id.toString() && req.user.role !== 'admin') {\r\n      return res.status(403).json({ error: 'Not authorized to delete this apartment' });\r\n    }\r\n\r\n    await apartment.deleteOne();\r\n\r\n    res.json({ message: 'Apartment removed' });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getApartments,\r\n  getApartment,\r\n  createApartment,\r\n  updateApartment,\r\n  deleteApartment,\r\n};\r\n"],"mappings":"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","ignoreList":[]}