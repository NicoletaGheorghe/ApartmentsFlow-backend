{"version":3,"names":["mongoose","require","bcrypt","userSchema","Schema","email","type","String","required","unique","trim","lowercase","password","minlength","name","profileImage","default","role","enum","favorites","Types","ObjectId","ref","timestamps","pre","next","isModified","salt","genSalt","hash","error","methods","comparePassword","candidatePassword","compare","User","model","module","exports"],"sources":["user.model.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\n\nconst userSchema = new mongoose.Schema(\n  {\n    email: {\n      type: String,\n      required: true,\n      unique: true,\n      trim: true,\n      lowercase: true,\n    },\n    password: {\n      type: String,\n      required: true,\n      minlength: 6,\n    },\n    name: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    profileImage: {\n      type: String,\n      default: '', // URL to the profile image\n    },\n    role: {\n      type: String,\n      enum: ['user', 'admin', 'agent'],\n      default: 'user',\n    },\n    favorites: [\n      {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: 'Apartment',\n      },\n    ],\n  },\n  {\n    timestamps: true,\n  }\n);\n\n// Hash password before saving\nuserSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n\n  try {\n    const salt = await bcrypt.genSalt(10);\n    this.password = await bcrypt.hash(this.password, salt);\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Method to compare password\nuserSchema.methods.comparePassword = async function (candidatePassword) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\nconst User = mongoose.model('User', userSchema);\n\nmodule.exports = User;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAElC,MAAME,UAAU,GAAG,IAAIH,QAAQ,CAACI,MAAM,CACpC;EACEC,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRN,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdK,SAAS,EAAE;EACb,CAAC;EACDC,IAAI,EAAE;IACJR,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdE,IAAI,EAAE;EACR,CAAC;EACDK,YAAY,EAAE;IACZT,IAAI,EAAEC,MAAM;IACZS,OAAO,EAAE,EAAE,CAAE;EACf,CAAC;EACDC,IAAI,EAAE;IACJX,IAAI,EAAEC,MAAM;IACZW,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;IAChCF,OAAO,EAAE;EACX,CAAC;EACDG,SAAS,EAAE,CACT;IACEb,IAAI,EAAEN,QAAQ,CAACI,MAAM,CAACgB,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE;EACP,CAAC;AAEL,CAAC,EACD;EACEC,UAAU,EAAE;AACd,CACF,CAAC;;AAED;AACApB,UAAU,CAACqB,GAAG,CAAC,MAAM,EAAE,gBAAgBC,IAAI,EAAE;EAC3C,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE,OAAOD,IAAI,CAAC,CAAC;EAE/C,IAAI;IACF,MAAME,IAAI,GAAG,MAAMzB,MAAM,CAAC0B,OAAO,CAAC,EAAE,CAAC;IACrC,IAAI,CAAChB,QAAQ,GAAG,MAAMV,MAAM,CAAC2B,IAAI,CAAC,IAAI,CAACjB,QAAQ,EAAEe,IAAI,CAAC;IACtDF,IAAI,CAAC,CAAC;EACR,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdL,IAAI,CAACK,KAAK,CAAC;EACb;AACF,CAAC,CAAC;;AAEF;AACA3B,UAAU,CAAC4B,OAAO,CAACC,eAAe,GAAG,gBAAgBC,iBAAiB,EAAE;EACtE,OAAO/B,MAAM,CAACgC,OAAO,CAACD,iBAAiB,EAAE,IAAI,CAACrB,QAAQ,CAAC;AACzD,CAAC;AAED,MAAMuB,IAAI,GAAGnC,QAAQ,CAACoC,KAAK,CAAC,MAAM,EAAEjC,UAAU,CAAC;AAE/CkC,MAAM,CAACC,OAAO,GAAGH,IAAI","ignoreList":[]}