a9270433611989905a0517e2130de32a
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const userSchema = new mongoose.Schema({
  email: {
    type: String,
    required: true,
    unique: true,
    trim: true,
    lowercase: true
  },
  password: {
    type: String,
    required: true,
    minlength: 6
  },
  name: {
    type: String,
    required: true,
    trim: true
  },
  profileImage: {
    type: String,
    default: '' // URL to the profile image
  },
  role: {
    type: String,
    enum: ['user', 'admin', 'agent'],
    default: 'user'
  },
  favorites: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Apartment'
  }]
}, {
  timestamps: true
});

// Hash password before saving
userSchema.pre('save', async function (next) {
  if (!this.isModified('password')) return next();
  try {
    const salt = await bcrypt.genSalt(10);
    this.password = await bcrypt.hash(this.password, salt);
    next();
  } catch (error) {
    next(error);
  }
});

// Method to compare password
userSchema.methods.comparePassword = async function (candidatePassword) {
  return bcrypt.compare(candidatePassword, this.password);
};
const User = mongoose.model('User', userSchema);
module.exports = User;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJiY3J5cHQiLCJ1c2VyU2NoZW1hIiwiU2NoZW1hIiwiZW1haWwiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJ0cmltIiwibG93ZXJjYXNlIiwicGFzc3dvcmQiLCJtaW5sZW5ndGgiLCJuYW1lIiwicHJvZmlsZUltYWdlIiwiZGVmYXVsdCIsInJvbGUiLCJlbnVtIiwiZmF2b3JpdGVzIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInRpbWVzdGFtcHMiLCJwcmUiLCJuZXh0IiwiaXNNb2RpZmllZCIsInNhbHQiLCJnZW5TYWx0IiwiaGFzaCIsImVycm9yIiwibWV0aG9kcyIsImNvbXBhcmVQYXNzd29yZCIsImNhbmRpZGF0ZVBhc3N3b3JkIiwiY29tcGFyZSIsIlVzZXIiLCJtb2RlbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1c2VyLm1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdGpzJyk7XG5cbmNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKFxuICB7XG4gICAgZW1haWw6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgdW5pcXVlOiB0cnVlLFxuICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgIGxvd2VyY2FzZTogdHJ1ZSxcbiAgICB9LFxuICAgIHBhc3N3b3JkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgIG1pbmxlbmd0aDogNixcbiAgICB9LFxuICAgIG5hbWU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgdHJpbTogdHJ1ZSxcbiAgICB9LFxuICAgIHByb2ZpbGVJbWFnZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdDogJycsIC8vIFVSTCB0byB0aGUgcHJvZmlsZSBpbWFnZVxuICAgIH0sXG4gICAgcm9sZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZW51bTogWyd1c2VyJywgJ2FkbWluJywgJ2FnZW50J10sXG4gICAgICBkZWZhdWx0OiAndXNlcicsXG4gICAgfSxcbiAgICBmYXZvcml0ZXM6IFtcbiAgICAgIHtcbiAgICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6ICdBcGFydG1lbnQnLFxuICAgICAgfSxcbiAgICBdLFxuICB9LFxuICB7XG4gICAgdGltZXN0YW1wczogdHJ1ZSxcbiAgfVxuKTtcblxuLy8gSGFzaCBwYXNzd29yZCBiZWZvcmUgc2F2aW5nXG51c2VyU2NoZW1hLnByZSgnc2F2ZScsIGFzeW5jIGZ1bmN0aW9uIChuZXh0KSB7XG4gIGlmICghdGhpcy5pc01vZGlmaWVkKCdwYXNzd29yZCcpKSByZXR1cm4gbmV4dCgpO1xuXG4gIHRyeSB7XG4gICAgY29uc3Qgc2FsdCA9IGF3YWl0IGJjcnlwdC5nZW5TYWx0KDEwKTtcbiAgICB0aGlzLnBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2godGhpcy5wYXNzd29yZCwgc2FsdCk7XG4gICAgbmV4dCgpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIG5leHQoZXJyb3IpO1xuICB9XG59KTtcblxuLy8gTWV0aG9kIHRvIGNvbXBhcmUgcGFzc3dvcmRcbnVzZXJTY2hlbWEubWV0aG9kcy5jb21wYXJlUGFzc3dvcmQgPSBhc3luYyBmdW5jdGlvbiAoY2FuZGlkYXRlUGFzc3dvcmQpIHtcbiAgcmV0dXJuIGJjcnlwdC5jb21wYXJlKGNhbmRpZGF0ZVBhc3N3b3JkLCB0aGlzLnBhc3N3b3JkKTtcbn07XG5cbmNvbnN0IFVzZXIgPSBtb25nb29zZS5tb2RlbCgnVXNlcicsIHVzZXJTY2hlbWEpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUNwQyxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFFbEMsTUFBTUUsVUFBVSxHQUFHLElBQUlILFFBQVEsQ0FBQ0ksTUFBTSxDQUNwQztFQUNFQyxLQUFLLEVBQUU7SUFDTEMsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLE1BQU0sRUFBRSxJQUFJO0lBQ1pDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLFNBQVMsRUFBRTtFQUNiLENBQUM7RUFDREMsUUFBUSxFQUFFO0lBQ1JOLElBQUksRUFBRUMsTUFBTTtJQUNaQyxRQUFRLEVBQUUsSUFBSTtJQUNkSyxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKUixJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFLElBQUk7SUFDZEUsSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUNESyxZQUFZLEVBQUU7SUFDWlQsSUFBSSxFQUFFQyxNQUFNO0lBQ1pTLE9BQU8sRUFBRSxFQUFFLENBQUU7RUFDZixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKWCxJQUFJLEVBQUVDLE1BQU07SUFDWlcsSUFBSSxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUM7SUFDaENGLE9BQU8sRUFBRTtFQUNYLENBQUM7RUFDREcsU0FBUyxFQUFFLENBQ1Q7SUFDRWIsSUFBSSxFQUFFTixRQUFRLENBQUNJLE1BQU0sQ0FBQ2dCLEtBQUssQ0FBQ0MsUUFBUTtJQUNwQ0MsR0FBRyxFQUFFO0VBQ1AsQ0FBQztBQUVMLENBQUMsRUFDRDtFQUNFQyxVQUFVLEVBQUU7QUFDZCxDQUNGLENBQUM7O0FBRUQ7QUFDQXBCLFVBQVUsQ0FBQ3FCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCQyxJQUFJLEVBQUU7RUFDM0MsSUFBSSxDQUFDLElBQUksQ0FBQ0MsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFLE9BQU9ELElBQUksQ0FBQyxDQUFDO0VBRS9DLElBQUk7SUFDRixNQUFNRSxJQUFJLEdBQUcsTUFBTXpCLE1BQU0sQ0FBQzBCLE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFDckMsSUFBSSxDQUFDaEIsUUFBUSxHQUFHLE1BQU1WLE1BQU0sQ0FBQzJCLElBQUksQ0FBQyxJQUFJLENBQUNqQixRQUFRLEVBQUVlLElBQUksQ0FBQztJQUN0REYsSUFBSSxDQUFDLENBQUM7RUFDUixDQUFDLENBQUMsT0FBT0ssS0FBSyxFQUFFO0lBQ2RMLElBQUksQ0FBQ0ssS0FBSyxDQUFDO0VBQ2I7QUFDRixDQUFDLENBQUM7O0FBRUY7QUFDQTNCLFVBQVUsQ0FBQzRCLE9BQU8sQ0FBQ0MsZUFBZSxHQUFHLGdCQUFnQkMsaUJBQWlCLEVBQUU7RUFDdEUsT0FBTy9CLE1BQU0sQ0FBQ2dDLE9BQU8sQ0FBQ0QsaUJBQWlCLEVBQUUsSUFBSSxDQUFDckIsUUFBUSxDQUFDO0FBQ3pELENBQUM7QUFFRCxNQUFNdUIsSUFBSSxHQUFHbkMsUUFBUSxDQUFDb0MsS0FBSyxDQUFDLE1BQU0sRUFBRWpDLFVBQVUsQ0FBQztBQUUvQ2tDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHSCxJQUFJIiwiaWdub3JlTGlzdCI6W119