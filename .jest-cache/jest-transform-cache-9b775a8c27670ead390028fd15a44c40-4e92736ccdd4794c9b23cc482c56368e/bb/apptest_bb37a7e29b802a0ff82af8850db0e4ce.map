{"version":3,"names":["request","require","mongoose","app","User","Apartment","testUser","beforeAll","create","email","password","name","beforeEach","deleteMany","afterEach","describe","it","response","get","expect","body","toEqual","error","title","description","price","location","type","coordinates","address","street","city","state","zipCode","country","bedrooms","bathrooms","area","amenities","images","owner","_id","status","toHaveProperty","Array","isArray","apartments","toBe","length","toBeGreaterThan"],"sources":["app.test.js"],"sourcesContent":["const request = require('supertest');\r\nconst mongoose = require('mongoose');\r\nconst app = require('../app');\r\nconst User = require('../models/user.model');\r\nconst Apartment = require('../models/apartment.model');\r\n\r\nlet testUser;\r\n\r\nbeforeAll(async () => {\r\n  // Create a test user\r\n  testUser = await User.create({\r\n    email: 'testuser@example.com',\r\n    password: 'password123',\r\n    name: 'Test User',\r\n  });\r\n}, 20000);\r\n\r\nbeforeEach(async () => {\r\n  // Clear apartments before each test\r\n  await Apartment.deleteMany();\r\n});\r\n\r\nafterEach(async () => {\r\n  await User.deleteMany();\r\n  await Apartment.deleteMany();\r\n});\r\n\r\ndescribe('App', () => {\r\n  it('should return 404 for unknown routes', async () => {\r\n    const response = await request(app).get('/unknown-route').expect(404);\r\n\r\n    expect(response.body).toEqual({\r\n      error: \"Sorry, can't find that\",\r\n    });\r\n  });\r\n\r\n  it('should return 200 and a list of apartments for /api/apartments', async () => {\r\n    // Create a test apartment\r\n    await Apartment.create({\r\n      title: 'Test Apartment',\r\n      description: 'A nice place',\r\n      price: 1000,\r\n      location: {\r\n        type: 'Point',\r\n        coordinates: [0, 0],\r\n        address: {\r\n          street: '123 Main St',\r\n          city: 'Testville',\r\n          state: 'TS',\r\n          zipCode: '12345',\r\n          country: 'Testland',\r\n        },\r\n      },\r\n      bedrooms: 2,\r\n      bathrooms: 1,\r\n      area: 50,\r\n      amenities: ['WiFi'],\r\n      images: [],\r\n      owner: testUser._id,\r\n      status: 'available',\r\n    });\r\n\r\n    const response = await request(app).get('/api/apartments').expect(200);\r\n    expect(response.body).toHaveProperty('apartments');\r\n    expect(Array.isArray(response.body.apartments)).toBe(true);\r\n    expect(response.body.apartments.length).toBeGreaterThan(0);\r\n  }, 10000);\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,GAAG,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAMG,IAAI,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAC5C,MAAMI,SAAS,GAAGJ,OAAO,CAAC,2BAA2B,CAAC;AAEtD,IAAIK,QAAQ;AAEZC,SAAS,CAAC,YAAY;EACpB;EACAD,QAAQ,GAAG,MAAMF,IAAI,CAACI,MAAM,CAAC;IAC3BC,KAAK,EAAE,sBAAsB;IAC7BC,QAAQ,EAAE,aAAa;IACvBC,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC,EAAE,KAAK,CAAC;AAETC,UAAU,CAAC,YAAY;EACrB;EACA,MAAMP,SAAS,CAACQ,UAAU,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEFC,SAAS,CAAC,YAAY;EACpB,MAAMV,IAAI,CAACS,UAAU,CAAC,CAAC;EACvB,MAAMR,SAAS,CAACQ,UAAU,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEFE,QAAQ,CAAC,KAAK,EAAE,MAAM;EACpBC,EAAE,CAAC,sCAAsC,EAAE,YAAY;IACrD,MAAMC,QAAQ,GAAG,MAAMjB,OAAO,CAACG,GAAG,CAAC,CAACe,GAAG,CAAC,gBAAgB,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;IAErEA,MAAM,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC;MAC5BC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFN,EAAE,CAAC,gEAAgE,EAAE,YAAY;IAC/E;IACA,MAAMX,SAAS,CAACG,MAAM,CAAC;MACrBe,KAAK,EAAE,gBAAgB;MACvBC,WAAW,EAAE,cAAc;MAC3BC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE;QACRC,IAAI,EAAE,OAAO;QACbC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACnBC,OAAO,EAAE;UACPC,MAAM,EAAE,aAAa;UACrBC,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAE,IAAI;UACXC,OAAO,EAAE,OAAO;UAChBC,OAAO,EAAE;QACX;MACF,CAAC;MACDC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC;MACZC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,CAAC,MAAM,CAAC;MACnBC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAElC,QAAQ,CAACmC,GAAG;MACnBC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,MAAMzB,QAAQ,GAAG,MAAMjB,OAAO,CAACG,GAAG,CAAC,CAACe,GAAG,CAAC,iBAAiB,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;IACtEA,MAAM,CAACF,QAAQ,CAACG,IAAI,CAAC,CAACuB,cAAc,CAAC,YAAY,CAAC;IAClDxB,MAAM,CAACyB,KAAK,CAACC,OAAO,CAAC5B,QAAQ,CAACG,IAAI,CAAC0B,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1D5B,MAAM,CAACF,QAAQ,CAACG,IAAI,CAAC0B,UAAU,CAACE,MAAM,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC;EAC5D,CAAC,EAAE,KAAK,CAAC;AACX,CAAC,CAAC","ignoreList":[]}