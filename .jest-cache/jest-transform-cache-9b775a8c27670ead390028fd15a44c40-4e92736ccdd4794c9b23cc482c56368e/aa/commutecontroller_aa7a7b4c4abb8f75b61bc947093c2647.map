{"version":3,"names":["GoogleMapsClient","require","Apartment","mapsClient","process","env","GOOGLE_MAPS_API_KEY","exports","getCommuteTime","req","res","apartmentId","destination","mode","body","apartment","findById","status","json","error","origin","location","coordinates","commuteInfo","success","data","console","details","message","getMultipleCommuteTimes","destinations","commutePromises","map","commuteResults","Promise","all","getPlaceDetails","placeId","params","placeDetails"],"sources":["commute.controller.js"],"sourcesContent":["const GoogleMapsClient = require('../utils/googleMapsClient');\nconst Apartment = require('../models/apartment.model');\n\nconst mapsClient = new GoogleMapsClient(process.env.GOOGLE_MAPS_API_KEY);\n\n// IMPORTANT: Handles commute time and place details logic\n// TODO: Add caching for frequent commute queries\n\nexports.getCommuteTime = async (req, res) => {\n  try {\n    const { apartmentId, destination, mode = 'driving' } = req.body;\n\n    // Get apartment location\n    const apartment = await Apartment.findById(apartmentId);\n    if (!apartment) {\n      return res.status(404).json({ error: 'Apartment not found' });\n    }\n\n    const origin = `${apartment.location.coordinates[1]},${apartment.location.coordinates[0]}`;\n\n    // Get commute time\n    const commuteInfo = await mapsClient.getCommuteTime(origin, destination, mode);\n\n    res.json({\n      success: true,\n      data: commuteInfo,\n    });\n  } catch (error) {\n    console.error('Error getting commute time:', error);\n    res.status(500).json({\n      error: 'Error getting commute time',\n      details: error.message,\n    });\n  }\n};\n\nexports.getMultipleCommuteTimes = async (req, res) => {\n  try {\n    const { apartmentId, destinations, mode = 'driving' } = req.body;\n\n    // Get apartment location\n    const apartment = await Apartment.findById(apartmentId);\n    if (!apartment) {\n      return res.status(404).json({ error: 'Apartment not found' });\n    }\n\n    const origin = `${apartment.location.coordinates[1]},${apartment.location.coordinates[0]}`;\n\n    // Get commute times for all destinations\n    const commutePromises = destinations.map((destination) =>\n      mapsClient.getCommuteTime(origin, destination, mode)\n    );\n\n    const commuteResults = await Promise.all(commutePromises);\n\n    res.json({\n      success: true,\n      data: commuteResults,\n    });\n  } catch (error) {\n    console.error('Error getting multiple commute times:', error);\n    res.status(500).json({\n      error: 'Error getting commute times',\n      details: error.message,\n    });\n  }\n};\n\nexports.getPlaceDetails = async (req, res) => {\n  try {\n    const { placeId } = req.params;\n\n    const placeDetails = await mapsClient.getPlaceDetails(placeId);\n\n    res.json({\n      success: true,\n      data: placeDetails,\n    });\n  } catch (error) {\n    console.error('Error getting place details:', error);\n    res.status(500).json({\n      error: 'Error getting place details',\n      details: error.message,\n    });\n  }\n};\n"],"mappings":"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","ignoreList":[]}